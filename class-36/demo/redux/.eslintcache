[{"/Users/Rhead/Documents/Projects/cf-projects/Code 401/git-hub-repos/seattle-js-401d39/class-36/demo/redux/src/index.js":"1","/Users/Rhead/Documents/Projects/cf-projects/Code 401/git-hub-repos/seattle-js-401d39/class-36/demo/redux/src/store/index.js":"2","/Users/Rhead/Documents/Projects/cf-projects/Code 401/git-hub-repos/seattle-js-401d39/class-36/demo/redux/src/store/votes.js":"3"},{"size":312,"mtime":1611603970115,"results":"4","hashOfConfig":"5"},{"size":537,"mtime":1611603970116,"results":"6","hashOfConfig":"5"},{"size":1158,"mtime":1611605035873,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"oxs1ma",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/Rhead/Documents/Projects/cf-projects/Code 401/git-hub-repos/seattle-js-401d39/class-36/demo/redux/src/index.js",[],["16","17"],"/Users/Rhead/Documents/Projects/cf-projects/Code 401/git-hub-repos/seattle-js-401d39/class-36/demo/redux/src/store/index.js",[],"/Users/Rhead/Documents/Projects/cf-projects/Code 401/git-hub-repos/seattle-js-401d39/class-36/demo/redux/src/store/votes.js",["18"],"// votes reducer\n\nlet initialState = {\n  candidates: [\n    { name: 'Mary', votes: 0 },\n    { name: 'Bob', votes: 0 },\n    { name: 'Jamie', votes: 0 },\n  ]\n};\n\n// actions\nexport const increment = (name) => {\n  return {\n    type: 'INCREMENT',\n    payload: name\n  }\n}\n\n// export a function that has two parameters, state and action\n// action has both type and payload in it\n// switch statement to determijne what the type is\n// the default return is state\n\nexport default (state = initialState, action) => {\n  let { type, payload } = action;\n  switch (type) {\n    case 'INCREMENT':\n      // increment the votes for the candidate\n      let candidates = state.candidates.map(candidate => {\n        // find the candidate who was click on\n        if (candidate.name === payload) {\n          // increment the vote\n          return { name: candidate.name, votes: candidate.votes + 1 }\n        }\n        return candidate;\n      });\n\n      console.log('inital state', initialState, candidates);\n      // initialState.candidates = candidates;\n      // return initialState.candidates;\n      return candidates;\n\n    // return state;\n\n    default:\n      return state;\n  }\n}",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":24,"column":1,"nodeType":"25","endLine":48,"endColumn":2},"no-native-reassign",["26"],"no-negated-in-lhs",["27"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]