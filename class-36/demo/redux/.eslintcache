[{"/Users/Rhead/Documents/Projects/cf-projects/Code 401/git-hub-repos/seattle-js-401d39/class-36/demo/redux/src/index.js":"1","/Users/Rhead/Documents/Projects/cf-projects/Code 401/git-hub-repos/seattle-js-401d39/class-36/demo/redux/src/store/index.js":"2","/Users/Rhead/Documents/Projects/cf-projects/Code 401/git-hub-repos/seattle-js-401d39/class-36/demo/redux/src/store/votes.js":"3","/Users/Rhead/Documents/Projects/cf-projects/Code 401/git-hub-repos/seattle-js-401d39/class-36/demo/redux/src/app.js":"4","/Users/Rhead/Documents/Projects/cf-projects/Code 401/git-hub-repos/seattle-js-401d39/class-36/demo/redux/src/component/votes-counter.js":"5"},{"size":312,"mtime":1611619234406,"results":"6","hashOfConfig":"7"},{"size":537,"mtime":1611603970116,"results":"8","hashOfConfig":"7"},{"size":1386,"mtime":1611619151140,"results":"9","hashOfConfig":"7"},{"size":171,"mtime":1611603970114,"results":"10","hashOfConfig":"7"},{"size":1299,"mtime":1611609657306,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"oxs1ma",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/Rhead/Documents/Projects/cf-projects/Code 401/git-hub-repos/seattle-js-401d39/class-36/demo/redux/src/index.js",[],["24","25"],"/Users/Rhead/Documents/Projects/cf-projects/Code 401/git-hub-repos/seattle-js-401d39/class-36/demo/redux/src/store/index.js",[],"/Users/Rhead/Documents/Projects/cf-projects/Code 401/git-hub-repos/seattle-js-401d39/class-36/demo/redux/src/store/votes.js",[],"/Users/Rhead/Documents/Projects/cf-projects/Code 401/git-hub-repos/seattle-js-401d39/class-36/demo/redux/src/app.js",[],"/Users/Rhead/Documents/Projects/cf-projects/Code 401/git-hub-repos/seattle-js-401d39/class-36/demo/redux/src/component/votes-counter.js",["26"],"import React, {useState} from 'react';\nimport { connect } from 'react-redux';\nimport { increment, reset } from '../store/votes';\n\nconst mapDispatchToProps = { increment, reset };\n\n// goal: make an app that displays three names and their votes. when a user clicks on someone's name, their vote tally increases\n\n// [\n//   { name: 'Mary', votes: 0 },\n//   { name: 'Bob', votes: 0 },\n//   { name: 'Jamie', votes: 0 },\n// ]\n\nfunction VotesCounter(props){\n  console.log(props);\n  // const [votes, setVotes] = useState([\n  //     { name: 'Mary', votes: 0 },\n  //     { name: 'Bob', votes: 0 },\n  //     { name: 'Jamie', votes: 0 },\n  //   ]);\n  const voteForCandidate = (name) => {\n    console.log('vote for Candidate', name);\n    props.increment(name);\n  }\n\n  const reset = () => props.reset();\n\n  return(\n    <div id=\"votes-counter\">\n      {props.banana.candidates.map((candidate, idx) => (\n        <div key={idx}>\n          <p>Name: {candidate.name} has {candidate.votes}</p>\n          <button onClick={() => voteForCandidate(candidate.name)}>vote for this candidate</button>\n        </div>\n      ))}\n      <button onClick={reset}>Reset</button>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  banana: state.counter,\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VotesCounter);",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":16,"nodeType":"33","messageId":"34","endLine":1,"endColumn":24},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]